##########################################################################
# Copyright (C) 2006 DFKI GmbH.
# All rights reserved. Use is subject to license terms.
# See file "DFKI MARY software user agreement.txt" for the license
# under which you may use this component.
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = english-shprot
english-shprot.version = 3.0.0

# Declare "group names" as component that other components can require.
# These correspond to abstract "groups" of which this component is an instance.
provides = \
    english-pos-tagger \
    english-chunker

# List the dependencies, as a whitespace-separated list.
# We can require a component by name or by an abstract "group name" 
# as listed under the "provides" element.
requires = \
    marybase \
    english
    
# For each required component, an optional minimum version and an optional
# download url can be given.
requires.marybase.version = 3.0.0
requires.english.version = 3.0.0
requires.english.download = http://mary.dfki.de/download/mary-install-3.x.x.jar

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.

# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        de.dfki.lt.mary.modules.en.ShprotEn

# Optionally, one component can request a module declared in another module
# to be ignored. This can make sense if the component provides a better
# version of the same functionality as some base implementation.
# Here, we provide a better part-of-speech tagger than the default one,
# so don't load the default one:
ignore.modules.classes.list = \
        de.dfki.lt.mary.modules.en.FreeTTSPartOfSpeechTagger


####################################################################
####################### Module settings  ###########################
####################################################################
english.shprot.properties = MARY_BASE/lib/modules/shprot/shProTEn.properties

english.freetts.posConverterFile = MARY_BASE/lib/modules/shprot/english/tagger/mary2freettspos.txt
