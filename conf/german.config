##########################################################################
# Copyright (C) 2006 DFKI GmbH.
# All rights reserved. Use is subject to license terms.
# See file "DFKI MARY software user agreement.txt" for the license
# under which you may use this component.
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = german
german.version = 3.5.0

# Declare "group names" as component that other components can require.
# These correspond to abstract "groups" of which this component is an instance.
provides = a-language

# List the dependencies, as a whitespace-separated list.
# We can require a component by name or by an abstract "group name" 
# as listed under the "provides" element.
requires = \
    marybase \
    german-voice
    
# For each required component, an optional minimum version and an optional
# download url can be given.
requires.marybase.version = 3.5.0
requires.german-voice.version = 3.5.0
requires.german-voice.download = http://mary.dfki.de/download/mary-install-3.x.x.jar
requires.german-voice.download.package-name = german-hmm-bits2

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.

# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        de.dfki.lt.mary.modules.LanguageGuessingTextToMaryXML \
        de.dfki.lt.mary.modules.de.TextToMaryXML \
        de.dfki.lt.mary.modules.de.JTokeniser \
        de.dfki.lt.mary.modules.de.Preprocess \
        de.dfki.lt.mary.modules.de.Shprot \
        de.dfki.lt.mary.modules.de.InformationStructure \
        de.dfki.lt.mary.modules.de.JPhonemiser \
        de.dfki.lt.mary.modules.de.Prosody \
        de.dfki.lt.mary.modules.de.Postlex \
        de.dfki.lt.mary.modules.de.SimplePhoneme2AP \
        de.dfki.lt.mary.modules.de.XML2UttPostprocessedDe \
        de.dfki.lt.mary.modules.de.CARTDurationModeller \
        de.dfki.lt.mary.modules.de.CARTF0Modeller

        
        de.dfki.lt.mary.modules.de.KlattDurationModeller \
        de.dfki.lt.mary.modules.de.ContourGenerator


# use this module instead of Shprot when you can not use Shprot
# de.dfki.lt.mary.modules.de.PoSTagger
####################################################################
####################### Module settings  ###########################
####################################################################

german.cap.klattrulefile = MARY_BASE/lib/modules/de/cap/klattrule-params-de.properties
german.cap.phonemelistfile = MARY_BASE/lib/modules/de/cap/phoneme-list-de.xml
german.cap.tobirulefile = MARY_BASE/lib/modules/de/cap/tobirule-params-de.xml

german.phonemeset = MARY_BASE/lib/modules/de/cap/phoneme-list-de.xml

# Whether to try and pronounce English words according to the English
# lexicon in German text:
german.phonemiser.useenglish = true
# Write all unknown words into a file
german.phonemiser.logunknown = true
german.phonemiser.logunknown.filename = MARY_BASE/log/de_unknown.txt
german.phonemiser.logenglish.filename = MARY_BASE/log/de_english-words.txt

# Whether to apply paragraph declination intonation:
german.prosody.paragraphdeclination = true

# rules for prediction of ToBI tones
german.prosody.tobipredparams = MARY_BASE/lib/modules/de/prosody/tobipredparams_german.xml

# rules for accent priorities of pos
german.prosody.accentPriorities = MARY_BASE/lib/modules/de/prosody/POSAccentPriorities.properties

# copy the word accents to the first accented syllable
german.prosody.syllableaccents = false

german.shprot.properties = MARY_BASE/lib/modules/shprot/shProTDe.properties

# Experimental support for Germanet semantic database:
german.infostruct.usegermanet = false
german.infostruct.germanet.database = server.somewhere.de:3306/GermaNet
german.infostruct.germanet.user = GermaNet_user
german.infostruct.germanet.password = GMNT_pwd

# the phoneSet for German Cluster Unit voices
german.phoneSetFile = MARY_BASE/lib/modules/de/cap/clunitsPhoneset.txt

# Where to find the lexicon for the simple PoS tagger
german.lex = MARY_BASE/lib/modules/shprot/german/tagger/negra-pos.lex

# An FST containing word frequencies, in bins from 1 (rare) to 9 (frequent)
german.wordFrequency.fst = MARY_BASE/lib/modules/de/prosody/wordFrequencies-de.fst
german.wordFrequency.encoding = ISO-8859-1

# Global prosody trees for English:
german.duration.cart = MARY_BASE/lib/modules/de/cap/dur.tree
german.duration.featuredefinition = MARY_BASE/lib/modules/de/cap/phoneUnitFeatureDefinition.txt
german.f0.cart.left = MARY_BASE/lib/modules/de/cap/f0.left.tree
german.f0.cart.mid = MARY_BASE/lib/modules/de/cap/f0.mid.tree
german.f0.cart.right = MARY_BASE/lib/modules/de/cap/f0.right.tree
german.f0.featuredefinition = MARY_BASE/lib/modules/de/cap/phoneUnitFeatureDefinition.txt
